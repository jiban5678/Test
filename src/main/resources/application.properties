##配置数据库连接4个要素   驱动类，url地址，用户名，密码
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/db_qy148?useUnicode=true&characterEncoding=utf-8
#spring.datasource.username=root
#spring.datasource.password=root
##配置端口号  1024-49151随便使用，只要不和其他网络应用端口冲突
#server.port=9999
##配置上下文对象（相当于项目名称） 最好不要配置，如果配置访问麻烦
##server.servlet.context-path=/sbm
##mybatis相关配置
##  mybatis mapper配置文件存放位置
#mybatis.mapper-locations=classpath:mapper/*.xml
## mybatis别名配置  mapper.xml文件 查询方法返回值为resultType="Dept"
#mybatis.type-aliases-package=com.aaa.sbm.entity
## mybatis日志配置
#mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

#spring.datasource.druid.driver-class-name=oracle.jdbc.driver.OracleDriver  可配可不配，阿里的数据库连接池会通过url自动搜寻
spring.datasource.druid.url=jdbc:mysql://localhost:3306/qy148_z?useUnicode=true&characterEncoding=utf-8
#spring.datasource.druid.url=jdbc:mysql://192.168.170.110:8066/db_qy148?useUnicode=true&characterEncoding=utf-8

spring.datasource.druid.username=root
spring.datasource.druid.password=root
spring.datasource.druid.initial-size=1
spring.datasource.druid.max-active=20
spring.datasource.druid.min-idle=10
spring.datasource.druid.max-wait=10
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。
#在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。
#spring.datasource.druid.pool-prepared-statements=true
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
#配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
#配置扩展插件:监控统计用的filter:stat  日志用的filter:log4j  防御sql注入的filter:wall
spring.datasource.druid.filters=stat,wall
#spring.datasource.druid.filter.stat.log-slow-sql=true
#spring.datasource.druid.filter.stat.slow-sql-millis=2000
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true

#解决swagger和springboot冲突
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

#分页插件
#helperDialect属性来指定分页插件使用哪种方言
pagehelper.helper-dialect=mysql
#当该参数设置为 true 时，pageNum<=0 时会查询第一页， pageNum>pages（超过总数时），会查询最后一页。
pagehelper.reasonable=true
#支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。
pagehelper.support-methods-arguments=true
#增加了该参数来配置参数映射，用于从对象中根据属性名取值
pagehelper.params=count=countSql

#配置web静态资源位置
spring.web.resources.static-locations=classpath:/static/,classpath:/templates/
