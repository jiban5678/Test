<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--配置namespace  1,绑定接口 2,隔离语句-->
<mapper namespace="com.aaa.sbm.dao.DeptDao">
    <!--开启二级缓存
    1，所有 select 语句的结果将会被缓存  除非自己配置去掉缓存useCache="false"
    2,所有 insert、update 和 delete 语句会刷新缓存。（增删改是改变数据库数据，改变之后一定要重新缓存）除非自己配置不刷新 flushCache="false"
    3,缓存会使用最近最少使用算法（LRU, Least Recently Used）算法来清除不需要的缓存。(当1025个热点数据准备缓存时，先把缓存最近最少使用的踢出去)
    默认策略可以通过 eviction="FIFO"  改为先进先出
    4,缓存不会定时进行刷新（也就是说，没有刷新间隔）。如果想定时刷新（定时把所有缓存内容清空）配置flushInterval=""
    5,缓存会保存列表或对象（无论查询方法返回哪种）的 1024 个引用(一共有多少个被缓存)。
    6,缓存会被视为读/写缓存 (readOnly="false")，这意味着获取到的对象并不是共享的，可以安全地被调用者修改，而不干扰其他调用者或线程所做的潜在修改。
     如果配置的是readOnly="false"  每次请求获取缓存数据时，缓存会把当前缓存的数据复制一份返回给调用或者线程，修改复制品，对原来缓存没有任何影响，
     速度慢，但是安全性好。。。。 浪费内存
     如果配置的是readOnly="true"  每一个请求获取缓存数据时，都是同一份数据，如果有请求改了，其他人拿到的也会被修改，速度快，因为没有复制品
     但是安全性不好。。。 节省内存
    -->
    <!--通过cache标签 中的属性type调用第三方缓存-->
    <cache type="com.aaa.sbm.util.MyCustomCache"></cache>
    <!--部门带参查询方法-->
<!--    <select id="queryByParam" parameterType="dept" resultType="Dept"  useCache="false">-->
    <select id="queryByParam" parameterType="dept" resultType="Dept" >
        select deptno,dname deptName,loc from tb_dept
        <where>
            <if test="deptNo!=null and deptNo!=0">
                and deptno =#{deptNo}
            </if>
            <if test="deptName!=null and deptName!=''">
                and dname like concat('%',#{deptName},'%')
               <!---and dname like '%${deptName}%'-->
            </if>
            <if test="loc!=null and loc!=''">
                and loc like concat('%',#{loc},'%')
                <!---and loc like '%${loc}%'-->
            </if>
        </where>
    </select>
  <!--  <select id="queryById" resultType="">

    </select>
    <select id="queryByOther" resultType="">

    </select>
    ...-->
    <!--部门添加-->
   <!-- <insert id="add" flushCache="false">-->
    <insert id="add" >
        insert into tb_dept(dname,loc) values(#{deptName},#{loc})
    </insert>
</mapper>